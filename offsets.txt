Name offset                     00000028
Parent offset                   00000034
Children offset                 0000002C
DataModel vftable               0204DCC4
Script Context vftable          0205B914
L->identity                     00000018
L->extraspace                   00000074
Script identity: *(DWORD*)(*(DWORD*)(rL + 74) + 18) = id
Replicator::OnReceive           013EED90
Replicator::SendPhysics         014B3270
Replicator::SendPhysicsMod      007E093A
Replicator::CreateEventPacket   014982E0
Replicator::SendReplicateToPeer 013F9690
Replicator::SendQueueItem       01405830
onreceive_case_table            013EFD28
onreceive_pointer_table         013EFCF0
onreceive_case_21               013EF64C
onreceive_case_22               013EF54D
onreceive_case_27               013EEFDE
onreceive_case_129              013EFABC
onreceive_case_130              013EF508
onreceive_case_131              013EF9EA
onreceive_case_132              013EFA28
onreceive_case_134              013EF485
onreceive_case_135...           013EFADB
onreceive_case_137              013EFB52
onreceive_case_141              013EFA09
onreceive_case_145              013EF4A4
onreceive_case_151              013EF4E9
onreceive_case_default          013EFCC7
luaL_checklstring               01595460
lua_pushcclosure                015938B0
luaF_newcclosure                015AB210
luaC_step                       015A9DD0
luaD_precall                    0159FE10
luaD_call                       015960B0
luaU_do_execute                 0159F2D0
lua_tolstring                   01594BA0
tag_error                       01595EC0
luaF_newlclosure                015AB270
luaF_newproto                   015AB2E0
luaM_malloc                     015AE340
luaC_link                       015A9D10
lua_typename                    01595090
luaL_typerror                   01595DB0
getnamecallmethod               015951F0
luaF_findupval                  015AAF80
namecall offset                 00000068
luaU_execute(debug)             01596B80
luaU_execute(real)              0159AB90
vm_case_table                   0159E9A8
vm_pointer_table                0159E87C
L->l_G                          00000014
l_G deobf            (*(int*)x - (int)(x))
l_G obf              *(int*)x = (int)value + (int)x
l_G deobf id                    00000005
luaV_gettable                   015ADAA0
luaH_get                        015ABC30
luaH_getstr                     015ABE40
luaH_getnum                     015ABD60
luaV_settable                   015ADD10
luaH_set                        015AC130
luaH_new                        01BEF420
luaH_getn                       015ABCE0
unbound_search                  015ACC70
luaD_throw                      01596560
luaG_runerror                   015A1400
luaO_pushvfstring               015A04C0
addinfo                         015A0DC0
lua_pushfstring                 01593980
luaD_growstack                  015961B0
luaS_newlstr                    015AB620
luaM_realloc                    015AE340
callTMres                       015ACDE0
luaV_gettable_opt               015ADAA0
lua_gettable                    01593190
index2adr                       01592AF0
luaU_loadbuffer                 0159F2F0
luaD_rawrunprotected            015962C0
L->env                          00000040
L->base                         0000000C
L->top                          00000018
closure->isC                    00000007
closure->func                   00000018
closure deobf id                00000002     *(DWORD*)(cl + offset) - (cl + offset)
spawn                           007AB5D0
table->is_readonly              00000009
lua_type                        01595050
luaL_checktype                  01595500
luaL_getmetafield               01595750
lua_settop                      015949A0
lua_getmetatable                015930D0
lua_touserdata                  01594F60
luaL_checkany                   015953F0
lua_rawequal                    01593F70
lua_pushboolean                 01593860
lua_rawget                      01593FF0
lua_rawset                      01594190
lua_rawgeti                     01594260
lua_rawseti                     01595560
lua_tothread                    02174E90
auxresume                       015A2630
lua_resume                      01596610
luaB_cocreate                   015A2530
lua_newthread                   01593530
lua_pushvalue                   01593DC0
lua_xmove                       01595170
lua_getstate                    0079CB90
Lua state offset                000000CC
Lua state deobf                 00000006
Lua thread code (auto-generated):
signed int type = 0;
thread = ((type << 6) + script_context + 204) ^ *reinterpret_cast<uintptr_t*>((type << 6) + script_context + 204);

luaL_argerror                   01595DB0
lua_setmetatable                01594730
lua_createtable                 01592DA0
lua_newuserdata                 015935C0
ipairsaux                       015A1FF0
lua_settable                    01594920
LUA_TNUMBER                     00000004
LUA_TSTRING                     00000005
LUA_TTABLE                      00000007
LUA_TFUNCTION                   00000009
LUA_TBOOLEAN                    00000001
LUA_TUSERDATA                   00000006
luaE_newthread                  015A0890
lua_pushinteger                 015939F0
lua_pushnumber                  01593B60
xor_const                       02A20680
