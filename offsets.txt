Name offset: 40
Parent offset: 52
Children offset: 44
DataModel: 0B510434

DataModel: 0B510434
DataModel vftable: 0217CFD8

Script Context: 0EB854B8
Script Context vftable: 0218AF14

NetworkClient: 18BCB8D0
Replicator: 1F508CF0
breakpoint string: 0218B3B8
Got Lua state: 20490F20
Name offset                     00000028
Parent offset                   00000034
Children offset                 0000002C
DataModel vftable               020ACFD8
Script Context vftable          020BAF14
L->identity                     00000018
L->extraspace                   00000070
Script identity: *(DWORD*)(*(DWORD*)(rL + 70) + 18) = id
Replicator::OnReceive           01442A90
Replicator::SendPhysics         01507BD0
Replicator::SendPhysicsMod      007F089A
Replicator::CreateEventPacket   014EC2F0
Replicator::SendReplicateToPeer 0144C990
Replicator::SendQueueItem       01458C90
onreceive_case_table            01443A28
onreceive_pointer_table         014439F0
onreceive_case_21               0144334C
onreceive_case_22               0144324D
onreceive_case_27               01442CDE
onreceive_case_129              014437BC
onreceive_case_130              01443208
onreceive_case_131              014436EA
onreceive_case_132              01443728
onreceive_case_134              01443185
onreceive_case_135...           014437DB
onreceive_case_137              01443852
onreceive_case_141              01443709
onreceive_case_145              014431A4
onreceive_case_151              014431E9
onreceive_case_default          014439C7
luaL_checklstring               015E8490
lua_pushcclosure                015E68C0
luaF_newcclosure                01600020
luaC_step                       015FD1E0
luaD_precall                    015F3200
luaD_call                       015E90F0
luaU_do_execute                 015F26A0
lua_tolstring                   015E7BB0
tag_error                       015E8EF0
luaF_newlclosure                01600080
luaF_newproto                   016000F0
luaM_malloc                     016016E0
luaC_link                       015FD120
lua_typename                    015E80A0
luaL_typerror                   015E8DE0
getnamecallmethod               015E8220
luaF_findupval                  015FFD90
namecall offset                 00000064
luaU_execute(debug)             015E9BE0
luaU_execute(real)              015EDDB0
vm_case_table                   015F1D6C
vm_pointer_table                015F1C40
L->l_G                          0000000C
l_G deobf id                    00000000
l_G func offset                 000007D0
ptr deobf id                    00000000
luaV_gettable                   01600E50
luaH_get                        015FEB40
luaH_getstr                     015FED90
luaH_getnum                     015FECB0
luaV_settable                   016010C0
luaH_set                        015FF0A0
luaH_new                        01C46BF0
luaH_getn                       015FEBF0
unbound_search                  015FFB90
luaD_throw                      015F47A0
luaG_runerror                   015F47A0
luaO_pushvfstring               015F38B0
addinfo                         015F4180
luaD_growstack                  015E91F0
luaS_newlstr                    015FE5B0
luaM_realloc                    016016E0
callTMres                       016001A0
luaV_gettable_opt               01600E50
lua_gettable                    015E6190
index2adr                       015E5AA0
luaU_loadbuffer                 015F26C0
luaD_rawrunprotected            015E9300
L->env                          00000050
L->base                         00000018
L->top                          0000001C
closure->isC                    00000007
closure->func                   00000018
closure deobf id                00000005     (cl + offset) - *(DWORD*)(cl + offset)
spawn                           007BA950
table->is_readonly              00000007
lua_type                        015E8060
luaL_checktype                  015E8530
luaL_getmetafield               015E8780
lua_settop                      015E79B0
lua_getmetatable                015E60D0
lua_touserdata                  015E7F70
luaL_checkany                   015E8420
lua_rawequal                    015E6F60
lua_pushboolean                 015E6870
lua_rawget                      015E6FE0
lua_rawset                      015E7190
lua_rawgeti                     015E7260
lua_rawseti                     015E8590
lua_tothread                    016B7EA0
auxresume                       015F5AC0
lua_resume                      015E9690
luaB_cocreate                   015F59B0
lua_newthread                   015E6530
lua_pushvalue                   015E6DB0
lua_xmove                       015E81A0
"Running Script": 007BB761
lua_getstate                    007ABCA0
Lua state offset                000000CC
Lua state deobf                 00000006
Lua thread code (auto-generated):
signed int type = 0;
thread = ((type << 6) + script_context + 204) ^ *reinterpret_cast<uintptr_t*>((type << 6) + script_context + 204);

luaL_argerror                   015E8DE0
lua_setmetatable                015E7740
lua_createtable                 015E5D90
lua_newuserdata                 015E65C0
ipairsaux                       015F5460
lua_settable                    015E7930
LUA_TNUMBER                     00000004
LUA_TSTRING                     00000005
LUA_TTABLE                      00000008
LUA_TFUNCTION                   00000006
LUA_TBOOLEAN                    00000001
LUA_TUSERDATA                   00000009
luaE_newthread                  015F3CB0
lua_pushinteger                 015E6A10
lua_pushnumber                  015E6B90
xor_const                       02AA67B0